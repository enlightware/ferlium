name: Cargo Build & Test

on: [push, pull_request]

jobs:
  build_and_test:
    name: Rust Formatting & Tests (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        toolchain: [stable] # beta, nightly
        os: [ubuntu-latest, macos-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Rust
        run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}

      - name: Set up cache
        uses: Swatinem/rust-cache@v2

      - name: Check formatting
        if: runner.os != 'macOS'
        run: cargo fmt --check

      - name: Run Clippy (Linting)
        if: runner.os != 'macOS'
        run: cargo clippy -- -D warnings

      - name: Build
        run: cargo build

      - name: Install cargo-nextest
        run: cargo install cargo-nextest

      - name: Run local tests
        run: cargo nextest run

      - name: Install wasm-pack
        run: cargo install wasm-pack

      - name: Run WASM tests (Chrome and Firefox)
        if: runner.os != 'macOS'
        run: WASM_BINDGEN_USE_BROWSER=1 wasm-pack test --chrome --firefox --headless --test language --lib

      - name: Run WASM tests (Safari)
        if: runner.os == 'macOS'
        run: WASM_BINDGEN_USE_BROWSER=1 wasm-pack test --chrome --safari --test language --lib

  # web-build:
  #   name: Web IDE Build & Test
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: ide

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4

  #     - name: Set up Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: 18

  #     - name: Install dependencies
  #       run: npm ci

  #     - name: Build IDE
  #       run: npm run build

  #     - name: Run IDE tests
  #       run: npm test
